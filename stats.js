var mysql = require('mysql');
var _ = require('underscore');

let config1 = {
    host: "localhost",
    user: "root",
    password: "virio0216",
    database: "u7966147_default"
}

let config2 = {
    host: "sedecilliard.com",
    user: "u7966147_root",
    password: "OyusPA!U@elG",
    database: "u7966147_default"
}

let con1 = mysql.createConnection(config1);

let con2 = mysql.createConnection(config2);
con = con1;


class Database {
    constructor(config) {
        this.connection = mysql.createConnection(config);
    }
    query(sql, args) {
        return new Promise((resolve, reject) => {
            this.connection.query(sql, args, (err, rows) => {
                if (err)
                    return reject(err);
                resolve(rows);
            });
        });
    }
    close() {
        return new Promise((resolve, reject) => {
            this.connection.end(err => {
                if (err)
                    return reject(err);
                resolve();
            });
        });
    }
}
let database = new Database(config1)

let drs_map = {}
let not = f=>!f
let is_achived = x=>{
    return x.target_reached_timestamp !== null
}
let not_achived = x=>x.target_reached_timestamp == null

let is_canceled = x=>{
    return  x.target_canceled_timestamp !== null
}
let not_canceled = x=>x.target_canceled_timestamp == null

database.query('SELECT * FROM targets')
    //
    .then(rows => {
        console.log(Object.keys(rows[0]));
        console.log('targets: ' + rows.length)

        let handmade = rows.filter(x=>!/autogenerated/.test(x.target_description))
        console.log('handmade: ' + handmade.length)

        let achived = handmade.filter(is_achived)
        console.log('achived: ' + achived.length)

        let canceled = handmade.filter(is_canceled)
        console.log('canceled: ' + canceled.length)

        let ca = canceled.filter(is_achived).filter(x=>x.target_canceled_timestamp > x.target_reached_timestamp)
        console.log('ca: ' + ca.length)

        let ac = achived.filter(is_canceled).filter(x=>x.target_canceled_timestamp < x.target_reached_timestamp)
        console.log('ac: ' + ac.length)

        //ca.forEach(x=>console.log(x.target_brief))
        database.close()
        return
    })